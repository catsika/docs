{
  "openapi": "3.0.3",
  "info": {
    "title": "Keymint API",
    "description": "Modern RESTful API specification for Keymint license key management system. Includes customer management and license key operations.",
    "version": "2.0.0",
    "contact": {
      "name": "Keymint Support",
      "url": "https://keymint.dev"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.keymint.dev",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/customer": {
      "get": {
        "tags": ["Customer Management"],
        "summary": "Get all customers",
        "description": "Retrieve all customers for the authenticated user",
        "responses": {
          "200": {
            "description": "List of customers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "post": {
        "tags": ["Customer Management"],
        "summary": "Create a new customer",
        "description": "Create a new customer with name and email",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCustomerResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/customer/with-keys": {
      "get": {
        "tags": ["Customer Management"],
        "summary": "Get customers with license keys",
        "description": "Retrieve customers with their associated license keys",
        "responses": {
          "200": {
            "description": "Customers with license keys retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomersWithKeysResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/customer/{customerId}": {
      "get": {
        "tags": ["Customer Management"],
        "summary": "Get customer by ID",
        "description": "Retrieve a specific customer by their ID",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerId"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/CustomerNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "put": {
        "tags": ["Customer Management"],
        "summary": "Update customer",
        "description": "Update an existing customer's information",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCustomerResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/CustomerNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      },
      "delete": {
        "tags": ["Customer Management"],
        "summary": "Delete customer",
        "description": "Delete a customer and all associated license keys",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerId"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCustomerResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/CustomerNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/customer/{customerId}/disable": {
      "post": {
        "tags": ["Customer Management"],
        "summary": "Toggle customer status",
        "description": "Toggle customer active/inactive status. If customer is active, it will be disabled. If customer is inactive, it will be enabled.",
        "parameters": [
          {
            "$ref": "#/components/parameters/CustomerId"
          }
        ],
        "responses": {
          "200": {
            "description": "Customer status toggled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleCustomerResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/CustomerNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/get-key": {
      "get": {
        "tags": ["License Key Management"],
        "summary": "Get license key information",
        "description": "Retrieve information about a specific license key",
        "parameters": [
          {
            "name": "productId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 22
            },
            "description": "Product ID associated with the license key"
          },
          {
            "name": "licenseKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "description": "The license key to retrieve information for"
          }
        ],
        "responses": {
          "200": {
            "description": "License key information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LicenseKeyInfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/LicenseKeyNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/key": {
      "post": {
        "tags": ["License Key Management"],
        "summary": "Create license key(s)",
        "description": "Create one or more license keys for a product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLicenseKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "License key(s) created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateLicenseKeyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/key/activate": {
      "post": {
        "tags": ["License Key Management"],
        "summary": "Activate license key",
        "description": "Activate a license key for a specific device",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLicenseKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "License key activated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateLicenseKeyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "$ref": "#/components/responses/ActivationLimitReached"
          },
          "404": {
            "$ref": "#/components/responses/LicenseKeyNotFound"
          },
          "429": {
            "$ref": "#/components/responses/RateLimitExceeded"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/key/deactivate": {
      "post": {
        "tags": ["License Key Management"],
        "summary": "Deactivate license key",
        "description": "Deactivate a license key for a specific device",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateLicenseKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "License key deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeactivateLicenseKeyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/LicenseKeyNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/key/block": {
      "post": {
        "tags": ["License Key Management"],
        "summary": "Block license key",
        "description": "Block a license key from being used",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockLicenseKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "License key blocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BlockLicenseKeyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/LicenseKeyNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    },
    "/key/unblock": {
      "post": {
        "tags": ["License Key Management"],
        "summary": "Unblock license key",
        "description": "Unblock a previously blocked license key",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnblockLicenseKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "License key unblocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnblockLicenseKeyResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/LicenseKeyNotFound"
          },
          "500": {
            "$ref": "#/components/responses/ServerError"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Access token for API authentication"
      }
    },
    "parameters": {
      "CustomerId": {
        "name": "customerId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 22
        },
        "description": "Unique identifier for the customer"
      }
    },
    "schemas": {
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique customer identifier"
          },
          "name": {
            "type": "string",
            "description": "Customer name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Customer email address"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the customer is active"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "createdBy": {
            "type": "string",
            "description": "ID of the user who created this customer"
          }
        },
        "required": ["id", "name", "email", "active", "createdAt", "updatedAt", "createdBy"]
      },
      "CustomerWithKeys": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Customer"
          },
          {
            "type": "object",
            "properties": {
              "licenseKeys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LicenseKey"
                },
                "description": "Associated license keys"
              }
            }
          }
        ]
      },
      "LicenseKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique license key identifier"
          },
          "key": {
            "type": "string",
            "description": "The license key string"
          },
          "productId": {
            "type": "string",
            "description": "Associated product ID"
          },
          "customerId": {
            "type": "string",
            "description": "Associated customer ID"
          },
          "maxActivations": {
            "type": "integer",
            "nullable": true,
            "description": "Maximum number of activations allowed"
          },
          "activations": {
            "type": "integer",
            "description": "Current number of activations"
          },
          "activated": {
            "type": "boolean",
            "description": "Whether the license key is activated"
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Device"
            },
            "description": "List of devices using this license"
          },
          "expires": {
            "type": "string",
            "nullable": true,
            "description": "Expiration date or 'Never'"
          },
          "customerCanSelfReset": {
            "type": "boolean",
            "description": "Whether customer can reset activations"
          }
        }
      },
      "Device": {
        "type": "object",
        "properties": {
          "hostId": {
            "type": "string",
            "description": "Device host identifier"
          },
          "deviceTag": {
            "type": "string",
            "description": "Optional device tag"
          },
          "ipAddress": {
            "type": "string",
            "description": "Device IP address"
          },
          "activationTime": {
            "type": "string",
            "format": "date-time",
            "description": "When the device was activated"
          }
        }
      },
      "NewCustomer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "description": "Customer name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Customer email address"
          }
        },
        "required": ["name", "email"]
      },
      "CreateCustomerRequest": {
        "$ref": "#/components/schemas/NewCustomer"
      },
      "UpdateCustomerRequest": {
        "$ref": "#/components/schemas/NewCustomer"
      },
      "CreateLicenseKeyRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "minLength": 22,
            "description": "Product ID for the license key"
          },
          "maxActivations": {
            "type": "string",
            "description": "Maximum number of activations (as string)"
          },
          "amountKeys": {
            "type": "string",
            "description": "Number of keys to create (as string)"
          },
          "customerId": {
            "type": "string",
            "description": "Existing customer ID (optional)"
          },
          "newCustomer": {
            "$ref": "#/components/schemas/NewCustomer",
            "description": "Create new customer with license key (optional)"
          }
        },
        "required": ["productId"]
      },
      "ActivateLicenseKeyRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "minLength": 22,
            "description": "Product ID"
          },
          "licenseKey": {
            "type": "string",
            "minLength": 1,
            "description": "License key to activate"
          },
          "hostId": {
            "type": "string",
            "description": "Device host identifier (optional)"
          },
          "deviceTag": {
            "type": "string",
            "description": "Device tag (optional)"
          }
        },
        "required": ["productId", "licenseKey"]
      },
      "DeactivateLicenseKeyRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "minLength": 22,
            "description": "Product ID"
          },
          "licenseKey": {
            "type": "string",
            "minLength": 1,
            "description": "License key to deactivate"
          },
          "hostId": {
            "type": "string",
            "description": "Device host identifier (optional)"
          }
        },
        "required": ["productId", "licenseKey"]
      },
      "BlockLicenseKeyRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "minLength": 22,
            "description": "Product ID"
          },
          "licenseKey": {
            "type": "string",
            "minLength": 1,
            "description": "License key to block"
          }
        },
        "required": ["productId", "licenseKey"]
      },
      "UnblockLicenseKeyRequest": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "minLength": 22,
            "description": "Product ID"
          },
          "licenseKey": {
            "type": "string",
            "minLength": 1,
            "description": "License key to unblock"
          }
        },
        "required": ["productId", "licenseKey"]
      },
      "CustomersResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "getCustomers"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "CustomersWithKeysResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "getCustomersWithLicenseKeys"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerWithKeys"
            }
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "CustomerResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "getCustomerById"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "CreateCustomerResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "createCustomer"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "UpdateCustomerResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "updateCustomer"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "DeleteCustomerResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "removeCustomer"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "ToggleCustomerResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "toggleActive"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Customer disabled"
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "CreateLicenseKeyResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "key": {
            "type": "string",
            "example": "NYCRU-AX8CZ-2MZM8-7MUKG"
          }
        }
      },
      "LicenseKeyInfoResponse": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "example": "getLicenseKey"
          },
          "status": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/LicenseKey"
          },
          "code": {
            "type": "integer",
            "example": 0
          }
        }
      },
      "ActivateLicenseKeyResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "License valid"
          },
          "licenseeName": {
            "type": "string",
            "description": "Customer name (if available)"
          },
          "licenseeEmail": {
            "type": "string",
            "description": "Customer email (if available)"
          }
        }
      },
      "DeactivateLicenseKeyResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "License key deactivated successfully"
          }
        }
      },
      "BlockLicenseKeyResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "License key blocked successfully"
          }
        }
      },
      "UnblockLicenseKeyResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "License key unblocked successfully"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Customer name cannot be empty"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "too_small"
                },
                "minimum": {
                  "type": "integer",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "example": "string"
                },
                "inclusive": {
                  "type": "boolean",
                  "example": true
                },
                "exact": {
                  "type": "boolean",
                  "example": false
                },
                "message": {
                  "type": "string",
                  "example": "Customer name cannot be empty"
                },
                "path": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["name"]
                }
              }
            }
          },
          "code": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "integer",
            "description": "Error code (1 for errors, 0 for success)"
          }
        }
      },
      "MethodNotAllowedError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "Method not allowed"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication required or invalid token",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "missingToken": {
                "summary": "Missing bearer token",
                "value": {
                  "message": "Unauthorized: Missing or invalid bearer token",
                  "code": 1
                }
              },
              "invalidToken": {
                "summary": "Invalid access token",
                "value": {
                  "message": "Invalid access token",
                  "code": 1
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Request validation failed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "BadRequestError": {
        "description": "Bad request - missing required parameters or malformed data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "missingParams": {
                "summary": "Missing required parameters",
                "value": {
                  "message": "Bad Request: productId and licenseKey query parameters are required",
                  "code": 1
                }
              },
              "malformedJson": {
                "summary": "Malformed JSON",
                "value": {
                  "message": "Bad Request: Could not parse JSON body or invalid input structure.",
                  "code": 1
                }
              }
            }
          }
        }
      },
      "CustomerNotFound": {
        "description": "Customer not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "message": "Customer not found",
              "code": 1
            }
          }
        }
      },
      "LicenseKeyNotFound": {
        "description": "License key not found or invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "message": "Invalid license key",
              "code": 1
            }
          }
        }
      },
      "ActivationLimitReached": {
        "description": "License key activation limit reached",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "message": "Activation limit reached",
              "code": 2
            }
          }
        }
      },
      "RateLimitExceeded": {
        "description": "Too many requests",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "message": "Too many activation attempts. Please try again later.",
              "code": 3
            }
          }
        }
      },
      "ServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "message": "Server error",
              "code": 1
            }
          }
        }
      },
      "MethodNotAllowed": {
        "description": "HTTP method not allowed for this endpoint",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/MethodNotAllowedError"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Customer Management",
      "description": "Operations for managing customers"
    },
    {
      "name": "License Key Management",
      "description": "Operations for managing license keys"
    }
  ]
}
